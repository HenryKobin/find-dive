{"version":3,"sources":["DiverReducer.js","assets/wave.svg","assets/scuba-diving.svg","assets/Scuba.svg","LeafMap.js","FindDive.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","diveSlice","createSlice","name","initialState","diverCurrentLocationString","diveSites","reducers","setCurrentLocationString","state","locationString","payload","setCurrentLocationJSON","action","diverCurrentLocation","setDiveSitesTest","setDiveSites","url","get","then","response","console","log","data","sites","catch","error","getCurrentLocationString","diverConfig","getDiveSites","actions","diveIcon","L","icon","iconUrl","ScubaDiverSVG","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","LeafMap","props","mapBounds","map","site","push","lat","lng","length","diverLocationJSON","diverLocationLoaded","id","bounds","zoom","TileLayer","attribution","Marker","position","Popup","Card","Header","Meta","distance","Description","target","href","diverLocation","AttributionControl","Image","src","ScubaSVG","FindDive","diveDispatch","useDispatch","useSelector","useState","setDiverLocationJSON","setDiverLocationLoad","setDiveSitesLoaded","Menu","vertical","fixed","as","textAlign","WaveSVG","style","color","Item","Form","onSubmit","e","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","request","message","Group","Input","label","labelPosition","size","placeholder","onChange","value","Button","content","header","Content","floated","newestOnTop","rtl","pauseOnFocusLoss","configureStore","reducer","DiverReducer","App","store","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2fb31c5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nconst axios = require('axios')\n\nconst POSITION_API_KEY = \"553a4010066e95eb55e4b8de0df0f33b\"\n\nexport const diveSlice = createSlice({\n  name: 'diver_config',\n  initialState: {\n    diverCurrentLocationString:'',\n    diveSites: [],\n\n  },\n  reducers: {\n\n\n    setCurrentLocationString: (state, locationString) => {\n        state.diverCurrentLocationString = locationString.payload\n    },\n\n    setCurrentLocationJSON: (state, action) => {\n        state.diverCurrentLocation = action.payload\n    },\n\n    setDiveSitesTest: (state, action) => {\n      {/* used in development, divesites api needs https */}\n      state.diveSites = [\n\n    {\n      \"currents\": null,\n      \"distance\": \"17.04\",\n      \"hazards\": null,\n      \"lat\": \"33.9978\",\n      \"name\": \"Star of Scotland Shipwreck\",\n      \"water\": null,\n      \"marinelife\": null,\n      \"description\": null,\n      \"maxdepth\": null,\n      \"mindepth\": null,\n      \"predive\": null,\n      \"id\": \"23902\",\n      \"equipment\": null,\n      \"lng\": \"-118.5242\"\n    },\n    {\n      \"currents\": null,\n      \"distance\": \"19.09\",\n      \"hazards\": null,\n      \"lat\": \"34.0362\",\n      \"name\": \"Big Rock\",\n      \"water\": null,\n      \"marinelife\": null,\n      \"description\": null,\n      \"maxdepth\": null,\n      \"mindepth\": null,\n      \"predive\": null,\n      \"id\": \"21726\",\n      \"equipment\": null,\n      \"lng\": \"-118.6096\"\n    },\n    {\n      \"currents\": null,\n      \"distance\": \"20.28\",\n      \"hazards\": null,\n      \"lat\": \"33.9183\",\n      \"name\": \"The Pipe\",\n      \"water\": null,\n      \"marinelife\": null,\n      \"description\": null,\n      \"maxdepth\": null,\n      \"mindepth\": null,\n      \"predive\": null,\n      \"id\": \"24369\",\n      \"equipment\": null,\n      \"lng\": \"-118.4822\"\n    },\n    {\n      \"currents\": null,\n      \"distance\": \"21.29\",\n      \"hazards\": null,\n      \"lat\": \"33.8821\",\n      \"name\": \"Manhattan Beach\",\n      \"water\": null,\n      \"marinelife\": null,\n      \"description\": null,\n      \"maxdepth\": null,\n      \"mindepth\": null,\n      \"predive\": null,\n      \"id\": \"18317\",\n      \"equipment\": null,\n      \"lng\": \"-118.4130\"\n    },\n    {\n      \"currents\": null,\n      \"distance\": \"23.67\",\n      \"hazards\": null,\n      \"lat\": \"33.8448\",\n      \"name\": \"Redondo Breakwaters\",\n      \"water\": null,\n      \"marinelife\": null,\n      \"description\": null,\n      \"maxdepth\": null,\n      \"mindepth\": null,\n      \"predive\": null,\n      \"id\": \"17969\",\n      \"equipment\": null,\n      \"lng\": \"-118.4007\"\n    }\n      ]\n    },\n\n    setDiveSites: (state, action) => {\n      const url = `http://api.divesites.com/?mode=sites&lat=${action.payload['lat']}&lng=${action.payload['lon']}&dist=25 `\n      axios.get(url)\n      .then(function (response) {\n        console.log(response.data)\n                state.diveSites = [response.data.sites]\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    }\n\n  }\n\n})\n\n\n\nexport const fetchDiveSites = () => {\n\n}\n\nexport const getCurrentLocationString = (state) => state.diverConfig.diverCurrentLocationString\nexport const getCurrentLocationJSON = (state) => state.diverConfig.diverCurrentLocationJSON\nexport const getDiveSites = (state) => state.diverConfig.diveSites\nexport const {\n  setCurrentLocationString,\n  setCurrentLocationJSON,\n  setDiveSites,\n  setDiveSitesTest\n} = diveSlice.actions\n\nexport default diveSlice.reducer\n","export default __webpack_public_path__ + \"static/media/wave.17df03b1.svg\";","export default __webpack_public_path__ + \"static/media/scuba-diving.7a1c8f63.svg\";","export default __webpack_public_path__ + \"static/media/Scuba.03f9e405.svg\";","import {  MapContainer as LeafletMap, Marker, Popup, TileLayer, AttributionControl } from \"react-leaflet\";\nimport { Image, Card } from 'semantic-ui-react'\nimport L from 'leaflet'\nimport WaveSVG from './assets/wave.svg'\nimport ScubaDiverSVG from './assets/scuba-diving.svg'\nimport ScubaSVG from './assets/Scuba.svg'\n\nconst diveIcon = L.icon({\n    iconUrl: ScubaDiverSVG,\n    iconSize: [64,64],\n    iconAnchor: [32, 64],\n    popupAnchor: [-22, -64],\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null\n});\n\n\nconst LeafMap = (props) => {\n var mapBounds = []\n\n props.diveSites.map((site)=> (\n  mapBounds.push([site.lat,site.lng])\n    )\n  )\n  if (mapBounds.length < 1){\n    mapBounds.push(props.diverLocationJSON)\n  }\n\n  return(\n    <>\n    {props.diverLocationLoaded && (\n      <LeafletMap id=\"worldmap\" bounds={mapBounds} zoom={10.5}>\n        <TileLayer\n         url= {props.url}\n         attribution='&copy; <a href=\"http://www.thunderforest.com/\">Thunderforest</a>, &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'/>\n        <Marker position={props.diverLocationJSON}>\n        </Marker>\n        {props.diveSites.map((site)=> (\n          <Marker\n          position={[site.lat,site.lng]}\n          icon={diveIcon}>\n          <Popup>\n          <Card.Header><strong>{site.name}</strong></Card.Header>\n          <Card.Meta>{site.distance} miles away</Card.Meta>\n          <Card.Description>\n          <a target=\"_blank\"\n           href={`https://www.google.com/search?q=${site.name}+near+${props.diverLocation}+dive+site`}>Find on Google</a>\n          </Card.Description>\n          </Popup>\n          </Marker>\n        ))}\n      <AttributionControl position=\"bottomleft\" />\n      </LeafletMap>\n\n    )}\n    {!props.diverLocationLoaded && (\n      <>\n      <div id=\"noMap\">\n          <Image src={ScubaSVG} id=\"waveSVG\"/>\n      </div>\n\n      </>\n    )}\n\n  </>\n  )\n  }\n\nexport default LeafMap\n","import React, {useEffect, useState} from \"react\";\nimport { usePosition } from 'use-position';\nimport {\n      setCurrentLocationString,\n      getCurrentLocationString,\n      setCurrentLocationJSON,\n      getCurrentLocationJSON,\n      setDiveSites,\n      getDiveSites,\n      setDiveSitesTest\n} from './DiverReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Image, Grid, Card, Header, Icon, Input, Button, Modal, Menu, Sidebar, Segment, Form } from 'semantic-ui-react'\nimport 'react-toastify/dist/ReactToastify.css';\nimport LeafMap from './LeafMap'\nimport WaveSVG from './assets/wave.svg'\nimport ScubaSVG from './assets/Scuba.svg'\n\nconst axios = require('axios')\nconst POSITION_API_KEY = \"pk.d9b763aa8806116fcfb34720875e940e\"\nconst MAP_TILE_URL = 'https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey=2b0938cd5adc4f70b1891708f2c31b8a';\n\nconst FindDive = (props) => {\n  const diveSitesList = []\n  const diveDispatch = useDispatch()\n  const diverLocation = useSelector(getCurrentLocationString)\n  const diveSites = useSelector(getDiveSites)\n  const [diverLocationJSON, setDiverLocationJSON] = useState(null)\n  const [diverLocationLoaded, setDiverLocationLoad] = useState(null)\n  const [diveSitesLoaded, setDiveSitesLoaded] = useState(false)\n\n  const onLocationTextChange = (e) => {\n    if(e.target.value.length >= 3)\n    setDiverLocationLoad(false)\n    diveDispatch(setCurrentLocationString(e.target.value))\n  }\n  const onFormSubmit = (e) => {\n    const url = `https://us1.locationiq.com/v1/search.php?key=${POSITION_API_KEY}&q=${diverLocation}&format=json`\n    axios.get(url)\n    .then(function (response) {\n      setDiverLocationJSON([response.data[0]['lat'],response.data[0]['lon']])\n      diveDispatch(setCurrentLocationJSON(response.data[0]))\n      diveDispatch(setDiveSites(response.data[0]))\n      setDiverLocationLoad(true)\n      setDiveSitesLoaded(true)\n    }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      toast.error(' Please try again momentarily.', {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n      });\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n  });\n\n  }\n\n  return(\n    <>\n    <LeafMap\n    diverLocationJSON={diverLocationJSON}\n    diverLocation={diverLocation}\n    diverLocationLoaded={diverLocationLoaded}\n    diveSites={diveSites}\n    url={MAP_TILE_URL}/>\n\n    <Menu vertical fixed={'right'} id={'searchMenu'}>\n\n    <Header as='h2' icon textAlign='center'>\n      <Image src={WaveSVG} style={{color:\"#82aa9f\"}} />\n      FindDive\n    </Header>\n\n    <Menu.Item>\n      <Form onSubmit={onFormSubmit}>\n      <Form.Group>\n      <Input\n      id = 'myLocation'\n      label={{ icon: 'map marker alternate' }}\n      labelPosition='left corner'\n      size='small'\n      placeholder='city, state'\n      onChange={onLocationTextChange}\n      />\n      <Form.Button content='Go' />\n      </Form.Group>\n      </Form>\n      </Menu.Item>\n    {\n      diverLocationLoaded ?\n      <>\n      <Menu.Item header>{diveSites.length} Dive sites within 25 miles of {diverLocation}.</Menu.Item>\n      <Menu.Item id='diveSiteList'>\n      <Card.Group>\n        {diveSites.length > 0 ? diveSites.map((site) => (\n        <Card color={'brown'}>\n          <Card.Content>\n            <Image\n              floated='right'\n              size='tiny'\n              src={ScubaSVG}\n            />\n            <Card.Header>{site.name}</Card.Header>\n            <Card.Meta>{site.distance} miles away</Card.Meta>\n            <Card.Description>\n            <a target=\"_blank\"\n             href={`https://www.google.com/search?q=${site.name}+near+${diverLocation}+dive+site`}>Find on Google</a>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      )) :<Image src={ScubaSVG}/>}\n\n      <Header as='h5' color='grey'>\n      Dive site data provided by <a target=\"_blank\" href=\"http://divesites.com\">DiveSites.com API </a>.\n      </Header>\n    </Card.Group>\n    </Menu.Item>\n    </>\n      : <Menu.Item header>Enter a location above to get started.</Menu.Item>\n    }\n    </Menu>\n    <ToastContainer\n    position=\"top-right\"\n    autoClose={5000}\n    hideProgressBar={false}\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable\n    pauseOnHover\n    />\n    {/* Same as */}\n    <ToastContainer />\n  </>\n)\n\n\n}\nexport default FindDive;\n","import { configureStore } from '@reduxjs/toolkit'\nimport DiverReducer from './DiverReducer'\nexport default configureStore({\n  reducer: {\n    diverConfig: DiverReducer,\n  }\n})\n","import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {Container} from 'semantic-ui-react'\nimport  {Provider, createStore} from 'react-redux'\nimport FindDive from './FindDive'\nimport store from './store.js'\nfunction App() {\n\n  return (\n    <Provider store={store}>\n    <>\n    <Container fluid>\n      <FindDive/>\n    </Container>\n    </>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}